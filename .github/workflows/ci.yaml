name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: true
      matrix:
        os: ["windows-latest", "ubuntu-latest", "macos-latest"]
        python-version: ["3.9", "3.11", "3.12"]
        experimental: [false]
        include:
          - python-version: "3.12"
            os: "ubuntu-latest"
            experimental: true

    env:
      PYTHON_VERSION: ${{ matrix.python-version }}
      OS: ${{ matrix.os }}
      UNSTABLE: ${{ matrix.experimental }}
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup Conda Environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: latest
          python-version: ${{ matrix.python-version }}
          activate-environment: test-environment
          channels: conda-forge
          channel-priority: strict
          conda-remove-defaults: "true"
          environment-file: continuous_integration/environment.yaml

      - name: Install unstable dependencies
        if: matrix.experimental == true
        shell: bash -l {0}
        run: |
          python -m pip install versioneer pkgconfig setuptools-scm; \
          conda uninstall --force-remove -y numpy pandas xarray pyresample pykdtree; \
          python -m pip install \
          -f https://pypi.anaconda.org/scientific-python-nightly-wheels/simple/ \
          --trusted-host pypi.anaconda.org \
          --no-deps --pre --upgrade \
          numpy \
          pandas; \
          python -m pip install \
          --no-deps --upgrade --pre --no-build-isolation \
          git+https://github.com/storpipfugl/pykdtree \
          git+https://github.com/pytroll/pyresample \
          git+https://github.com/dask/dask \
          git+https://github.com/dask/distributed \
          git+https://github.com/rasterio/rasterio \
          git+https://github.com/pydata/bottleneck \
          git+https://github.com/pydata/xarray;
          python -m pip install -e . --no-deps --no-build-isolation;

      - name: Install trollimage
        shell: bash -l {0}
        run: |
          conda list
          pip install --no-deps -e .
          # pip forces non-wheel builds if we provide --cython-coverage as a --build-option
          # and that's way too slow
          python setup.py build_ext --inplace --cython-coverage --force

      - name: Run unit tests
        shell: bash -l {0}
        run: |
          pytest --cov=trollimage trollimage/tests --cov-report=xml --cov-report=

      - name: Upload unittest coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          flags: unittests
          files: ./coverage.xml
          env_vars: OS,PYTHON_VERSION,UNSTABLE

      - name: Coveralls Parallel
        uses: AndreMiras/coveralls-python-action@develop
        with:
          flag-name: run-${{ matrix.test_number }}
          parallel: true
        if: runner.os == 'Linux'

  coveralls:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: AndreMiras/coveralls-python-action@develop
        with:
          parallel-finished: true
